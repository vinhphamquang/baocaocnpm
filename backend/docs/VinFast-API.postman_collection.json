{
	"info": {
		"_postman_id": "vinfast-api-collection",
		"name": "VinFast API Collection",
		"description": "Complete API collection for VinFast car dealership website\n\n## üöó VinFast API Documentation\n\nAPI cho website c·ª≠a h√†ng √¥ t√¥ VinFast - H·ªá th·ªëng qu·∫£n l√Ω b√°n h√†ng v√† d·ªãch v·ª• √¥ t√¥ ƒëi·ªán.\n\n### üîê Authentication\n1. ƒêƒÉng nh·∫≠p qua `/api/auth/login` ƒë·ªÉ l·∫•y token\n2. Copy token t·ª´ response\n3. Paste v√†o Authorization tab c·ªßa c√°c request c·∫ßn authentication\n\n### üì± Test Accounts\n- **Admin**: admin@vinfast.com / admin123\n- **User**: user@example.com / user123\n\n### üåê Base URL\n- Development: `http://localhost:8000/api`\n- Production: `https://api.vinfast.com/api`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nguy·ªÖn VƒÉn Test\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"0987654321\",\n  \"address\": \"H√† N·ªôi\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "register"]
						},
						"description": "ƒêƒÉng k√Ω t√†i kho·∫£n m·ªõi"
					}
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.token);",
									"    pm.environment.set('userId', response.data.user.id);",
									"    console.log('Admin token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@vinfast.com\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "login"]
						},
						"description": "ƒêƒÉng nh·∫≠p v·ªõi t√†i kho·∫£n admin"
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('userToken', response.token);",
									"    console.log('User token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"user123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "login"]
						},
						"description": "ƒêƒÉng nh·∫≠p v·ªõi t√†i kho·∫£n user th∆∞·ªùng"
					}
				},
				{
					"name": "Get My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/me",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "me"]
						},
						"description": "L·∫•y th√¥ng tin profile c·ªßa user hi·ªán t·∫°i"
					}
				},
				{
					"name": "Update Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nguy·ªÖn VƒÉn Updated\",\n  \"phone\": \"0123456789\",\n  \"address\": \"TP. H·ªì Ch√≠ Minh\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "profile"]
						},
						"description": "C·∫≠p nh·∫≠t th√¥ng tin profile"
					}
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "logout"]
						},
						"description": "ƒêƒÉng xu·∫•t"
					}
				}
			],
			"description": "API x√°c th·ª±c v√† qu·∫£n l√Ω phi√™n ƒëƒÉng nh·∫≠p"
		},
		{
			"name": "üöó Cars",
			"item": [
				{
					"name": "Get All Cars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars?page=1&limit=10",
							"host": ["{{baseUrl}}"],
							"path": ["cars"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "type",
									"value": "electric",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "200000000",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "2000000000",
									"disabled": true
								}
							]
						},
						"description": "L·∫•y danh s√°ch t·∫•t c·∫£ xe v·ªõi ph√¢n trang v√† filter"
					}
				},
				{
					"name": "Get Featured Cars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars/featured",
							"host": ["{{baseUrl}}"],
							"path": ["cars", "featured"]
						},
						"description": "L·∫•y danh s√°ch xe n·ªïi b·∫≠t"
					}
				},
				{
					"name": "Search Cars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars/search?q=VinFast&type=electric",
							"host": ["{{baseUrl}}"],
							"path": ["cars", "search"],
							"query": [
								{
									"key": "q",
									"value": "VinFast"
								},
								{
									"key": "type",
									"value": "electric"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								}
							]
						},
						"description": "T√¨m ki·∫øm xe theo t·ª´ kh√≥a"
					}
				},
				{
					"name": "Get Car by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data._id) {",
									"        pm.environment.set('carId', response.data._id);",
									"        console.log('Car ID saved:', response.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars/{{carId}}",
							"host": ["{{baseUrl}}"],
							"path": ["cars", "{{carId}}"]
						},
						"description": "L·∫•y chi ti·∫øt xe theo ID"
					}
				},
				{
					"name": "Create Car (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data._id) {",
									"        pm.environment.set('newCarId', response.data._id);",
									"        console.log('New car ID saved:', response.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"VinFast VF 9 Test\",\n  \"type\": \"electric\",\n  \"price\": 1800000000,\n  \"year\": 2024,\n  \"description\": \"VinFast VF 9 l√† m·∫´u SUV ƒëi·ªán cao c·∫•p v·ªõi thi·∫øt k·∫ø sang tr·ªçng v√† c√¥ng ngh·ªá ti√™n ti·∫øn.\",\n  \"specifications\": {\n    \"engine\": \"ƒê·ªông c∆° ƒëi·ªán\",\n    \"power\": \"408 HP\",\n    \"transmission\": \"H·ªôp s·ªë t·ª± ƒë·ªông\",\n    \"fuelType\": \"ƒêi·ªán\",\n    \"seating\": 7\n  },\n  \"images\": [\n    {\n      \"url\": \"/images/vf9-test.jpg\",\n      \"alt\": \"VinFast VF 9 Test\",\n      \"isPrimary\": true\n    }\n  ],\n  \"colors\": [\n    {\n      \"name\": \"Tr·∫Øng\",\n      \"code\": \"#FFFFFF\"\n    },\n    {\n      \"name\": \"ƒêen\",\n      \"code\": \"#000000\"\n    }\n  ],\n  \"isElectric\": true,\n  \"isFeatured\": true,\n  \"stock\": 5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/cars",
							"host": ["{{baseUrl}}"],
							"path": ["cars"]
						},
						"description": "T·∫°o xe m·ªõi (ch·ªâ Admin)"
					}
				},
				{
					"name": "Update Car (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"VinFast VF 9 Updated\",\n  \"price\": 1900000000,\n  \"isFeatured\": false,\n  \"stock\": 8\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/cars/{{newCarId}}",
							"host": ["{{baseUrl}}"],
							"path": ["cars", "{{newCarId}}"]
						},
						"description": "C·∫≠p nh·∫≠t th√¥ng tin xe (ch·ªâ Admin)"
					}
				},
				{
					"name": "Delete Car (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cars/{{newCarId}}",
							"host": ["{{baseUrl}}"],
							"path": ["cars", "{{newCarId}}"]
						},
						"description": "X√≥a xe (ch·ªâ Admin) - Soft delete"
					}
				}
			],
			"description": "API qu·∫£n l√Ω xe - xem, t√¨m ki·∫øm, qu·∫£n l√Ω (Admin)"
		},
		{
			"name": "üì¶ Orders",
			"item": [
				{
					"name": "Get My Orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/my-orders?page=1&limit=10",
							"host": ["{{baseUrl}}"],
							"path": ["orders", "my-orders"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "status",
									"value": "pending",
									"disabled": true
								}
							]
						},
						"description": "L·∫•y danh s√°ch ƒë∆°n h√†ng c·ªßa user hi·ªán t·∫°i"
					}
				},
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data._id) {",
									"        pm.environment.set('orderId', response.data._id);",
									"        console.log('Order ID saved:', response.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"car\": \"{{carId}}\",\n      \"quantity\": 1,\n      \"selectedColor\": \"Tr·∫Øng\",\n      \"depositAmount\": 50000000\n    }\n  ],\n  \"customerInfo\": {\n    \"fullName\": \"Nguy·ªÖn VƒÉn Test\",\n    \"email\": \"customer@example.com\",\n    \"phone\": \"0123456789\",\n    \"address\": \"123 ABC Street\",\n    \"city\": \"H√† N·ªôi\"\n  },\n  \"payment\": {\n    \"method\": \"bank_transfer\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": ["{{baseUrl}}"],
							"path": ["orders"]
						},
						"description": "T·∫°o ƒë∆°n h√†ng m·ªõi"
					}
				},
				{
					"name": "Get Order by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/{{orderId}}",
							"host": ["{{baseUrl}}"],
							"path": ["orders", "{{orderId}}"]
						},
						"description": "L·∫•y chi ti·∫øt ƒë∆°n h√†ng"
					}
				},
				{
					"name": "Get All Orders (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders?page=1&limit=20",
							"host": ["{{baseUrl}}"],
							"path": ["orders"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "status",
									"value": "pending",
									"disabled": true
								}
							]
						},
						"description": "L·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng (Admin only)"
					}
				},
				{
					"name": "Update Order Status (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"confirmed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orders/{{orderId}}/status",
							"host": ["{{baseUrl}}"],
							"path": ["orders", "{{orderId}}", "status"]
						},
						"description": "C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng (Admin only)"
					}
				}
			],
			"description": "API qu·∫£n l√Ω ƒë∆°n h√†ng - ƒë·∫∑t c·ªçc, theo d√µi tr·∫°ng th√°i"
		},
		{
			"name": "üöô Test Drive",
			"item": [
				{
					"name": "Get Available Slots",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/test-drive/available-slots?date=2024-12-15&location=hanoi",
							"host": ["{{baseUrl}}"],
							"path": ["test-drive", "available-slots"],
							"query": [
								{
									"key": "date",
									"value": "2024-12-15"
								},
								{
									"key": "location",
									"value": "hanoi"
								}
							]
						},
						"description": "L·∫•y danh s√°ch slot th·ªùi gian tr·ªëng cho l√°i th·ª≠"
					}
				},
				{
					"name": "Register Test Drive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data._id) {",
									"        pm.environment.set('testDriveId', response.data._id);",
									"        console.log('Test Drive ID saved:', response.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"car\": \"{{carId}}\",\n  \"customerInfo\": {\n    \"fullName\": \"Nguy·ªÖn VƒÉn Test\",\n    \"email\": \"testdrive@example.com\",\n    \"phone\": \"0987654321\"\n  },\n  \"schedule\": {\n    \"preferredDate\": \"2024-12-15\",\n    \"preferredTime\": \"10:00\"\n  },\n  \"location\": \"hanoi\",\n  \"message\": \"T√¥i mu·ªën l√°i th·ª≠ xe VinFast v√†o bu·ªïi s√°ng\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/test-drive",
							"host": ["{{baseUrl}}"],
							"path": ["test-drive"]
						},
						"description": "ƒêƒÉng k√Ω l√°i th·ª≠ xe"
					}
				},
				{
					"name": "Get My Test Drives",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/test-drive/my-test-drives?page=1&limit=10",
							"host": ["{{baseUrl}}"],
							"path": ["test-drive", "my-test-drives"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "L·∫•y danh s√°ch l√°i th·ª≠ c·ªßa user hi·ªán t·∫°i"
					}
				},
				{
					"name": "Get Test Drive by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/test-drive/{{testDriveId}}",
							"host": ["{{baseUrl}}"],
							"path": ["test-drive", "{{testDriveId}}"]
						},
						"description": "L·∫•y chi ti·∫øt l·ªãch l√°i th·ª≠"
					}
				},
				{
					"name": "Update Test Drive Status (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"confirmed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/test-drive/{{testDriveId}}/status",
							"host": ["{{baseUrl}}"],
							"path": ["test-drive", "{{testDriveId}}", "status"]
						},
						"description": "C·∫≠p nh·∫≠t tr·∫°ng th√°i l√°i th·ª≠ (Admin only)"
					}
				},
				{
					"name": "Add Feedback",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"feedback\": {\n    \"rating\": 5,\n    \"comment\": \"Xe r·∫•t tuy·ªát v·ªùi, tr·∫£i nghi·ªám l√°i th·ª≠ r·∫•t t·ªët!\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/test-drive/{{testDriveId}}/feedback",
							"host": ["{{baseUrl}}"],
							"path": ["test-drive", "{{testDriveId}}", "feedback"]
						},
						"description": "Th√™m feedback sau khi l√°i th·ª≠"
					}
				}
			],
			"description": "API ƒëƒÉng k√Ω v√† qu·∫£n l√Ω l·ªãch l√°i th·ª≠ xe"
		},
		{
			"name": "üìû Contact",
			"item": [
				{
					"name": "Send Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data._id) {",
									"        pm.environment.set('contactId', response.data._id);",
									"        console.log('Contact ID saved:', response.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nguy·ªÖn VƒÉn Contact\",\n  \"email\": \"contact@example.com\",\n  \"phone\": \"0123456789\",\n  \"subject\": \"product-inquiry\",\n  \"message\": \"T√¥i mu·ªën t∆∞ v·∫•n v·ªÅ xe VinFast VF 8. Xin cho bi·∫øt th√¥ng tin chi ti·∫øt v·ªÅ gi√° c·∫£ v√† ch√≠nh s√°ch b·∫£o h√†nh.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/contact",
							"host": ["{{baseUrl}}"],
							"path": ["contact"]
						},
						"description": "G·ª≠i li√™n h·ªá t∆∞ v·∫•n"
					}
				},
				{
					"name": "Get All Contacts (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/contact?page=1&limit=20&status=new",
							"host": ["{{baseUrl}}"],
							"path": ["contact"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "status",
									"value": "new"
								},
								{
									"key": "subject",
									"value": "product-inquiry",
									"disabled": true
								}
							]
						},
						"description": "L·∫•y danh s√°ch li√™n h·ªá (Admin only)"
					}
				},
				{
					"name": "Get Contact by ID (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/contact/{{contactId}}",
							"host": ["{{baseUrl}}"],
							"path": ["contact", "{{contactId}}"]
						},
						"description": "L·∫•y chi ti·∫øt li√™n h·ªá (Admin only)"
					}
				},
				{
					"name": "Respond to Contact (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m ƒë·∫øn VinFast VF 8. Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong th·ªùi gian s·ªõm nh·∫•t ƒë·ªÉ t∆∞ v·∫•n chi ti·∫øt.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/contact/{{contactId}}/respond",
							"host": ["{{baseUrl}}"],
							"path": ["contact", "{{contactId}}", "respond"]
						},
						"description": "Ph·∫£n h·ªìi li√™n h·ªá (Admin only)"
					}
				}
			],
			"description": "API li√™n h·ªá t∆∞ v·∫•n v√† h·ªó tr·ª£ kh√°ch h√†ng"
		},
		{
			"name": "üì∞ News",
			"item": [
				{
					"name": "Get All News",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/news?page=1&limit=10",
							"host": ["{{baseUrl}}"],
							"path": ["news"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "category",
									"value": "product",
									"disabled": true
								},
								{
									"key": "featured",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "L·∫•y danh s√°ch tin t·ª©c"
					}
				},
				{
					"name": "Get Featured News",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/news/featured?limit=5",
							"host": ["{{baseUrl}}"],
							"path": ["news", "featured"],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "L·∫•y danh s√°ch tin t·ª©c n·ªïi b·∫≠t"
					}
				},
				{
					"name": "Search News",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/news/search?q=VinFast&category=product",
							"host": ["{{baseUrl}}"],
							"path": ["news", "search"],
							"query": [
								{
									"key": "q",
									"value": "VinFast"
								},
								{
									"key": "category",
									"value": "product"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								}
							]
						},
						"description": "T√¨m ki·∫øm tin t·ª©c"
					}
				},
				{
					"name": "Get News by Slug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data._id) {",
									"        pm.environment.set('newsId', response.data._id);",
									"        console.log('News ID saved:', response.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/news/vinfast-vf-3-chinh-thuc-ra-mat-voi-gia-240-trieu-dong",
							"host": ["{{baseUrl}}"],
							"path": ["news", "vinfast-vf-3-chinh-thuc-ra-mat-voi-gia-240-trieu-dong"]
						},
						"description": "L·∫•y chi ti·∫øt tin t·ª©c theo slug"
					}
				},
				{
					"name": "Create News (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data._id) {",
									"        pm.environment.set('newNewsId', response.data._id);",
									"        console.log('New News ID saved:', response.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"VinFast m·ªü r·ªông th·ªã tr∆∞·ªùng qu·ªëc t·∫ø\",\n  \"excerpt\": \"VinFast ti·∫øp t·ª•c m·ªü r·ªông ho·∫°t ƒë·ªông kinh doanh ra th·ªã tr∆∞·ªùng qu·ªëc t·∫ø v·ªõi nhi·ªÅu k·∫ø ho·∫°ch ƒë·∫ßy tham v·ªçng.\",\n  \"content\": \"<p>VinFast ƒëang c√≥ nh·ªØng b∆∞·ªõc ti·∫øn m·∫°nh m·∫Ω trong vi·ªác m·ªü r·ªông th·ªã tr∆∞·ªùng qu·ªëc t·∫ø...</p>\",\n  \"category\": \"business\",\n  \"featuredImage\": {\n    \"url\": \"/images/news/vinfast-international.jpg\",\n    \"alt\": \"VinFast m·ªü r·ªông qu·ªëc t·∫ø\"\n  },\n  \"tags\": [\"vinfast\", \"qu·ªëc t·∫ø\", \"m·ªü r·ªông\"],\n  \"status\": \"published\",\n  \"featured\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/news",
							"host": ["{{baseUrl}}"],
							"path": ["news"]
						},
						"description": "T·∫°o tin t·ª©c m·ªõi (Admin only)"
					}
				},
				{
					"name": "Add Comment to News",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Tin t·ª©c r·∫•t hay v√† b·ªï √≠ch. C·∫£m ∆°n VinFast ƒë√£ chia s·∫ª!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/news/{{newsId}}/comments",
							"host": ["{{baseUrl}}"],
							"path": ["news", "{{newsId}}", "comments"]
						},
						"description": "Th√™m b√¨nh lu·∫≠n v√†o tin t·ª©c"
					}
				}
			],
			"description": "API qu·∫£n l√Ω tin t·ª©c v√† b√†i vi·∫øt"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not exists",
					"if (!pm.environment.get('baseUrl')) {",
					"    pm.environment.set('baseUrl', 'http://localhost:8000/api');",
					"}",
					"",
					"// Log request info",
					"console.log('üöÄ Request:', pm.request.method, pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Log response info",
					"console.log('üì• Response:', pm.response.code, pm.response.status);",
					"",
					"// Check for common errors",
					"if (pm.response.code === 401) {",
					"    console.log('‚ùå Authentication required or token expired');",
					"} else if (pm.response.code === 403) {",
					"    console.log('‚ùå Insufficient permissions');",
					"} else if (pm.response.code >= 400) {",
					"    console.log('‚ùå Error response:', pm.response.text());",
					"} else if (pm.response.code >= 200 && pm.response.code < 300) {",
					"    console.log('‚úÖ Success');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000/api",
			"type": "string"
		}
	]
}
